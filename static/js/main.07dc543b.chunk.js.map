{"version":3,"sources":["logo.svg","components/todoform.js","components/todoitem.js","components/todoitemslist.js","App.js","reportWebVitals.js","index.js"],"names":["Todoform","addTodo","useState","id","task","date","completed","todo","settodo","onSubmit","e","preventDefault","trim","uuid","name","type","value","onChange","target","Todo","toggleComplete","removeTodo","ListItem","style","display","Checkbox","checked","onClick","Typography","variant","textDecoration","IconButton","TodoItemsList","todos","map","LOCAL_STORAGE_KEY","App","setTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","className","src","logo","alt","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,MAA0B,iC,uBC0C1BA,MAvCf,YAA6B,IAAVC,EAAS,EAATA,QACf,EAAsBC,mBAAS,CAC3BC,GAAG,GACHC,KAAK,GACLC,KAAK,GACLC,WAAU,IAJd,mBAAMC,EAAN,KAAWC,EAAX,KAqBA,OACI,uBAAMC,SATd,SAAsBC,GACtBA,EAAEC,iBACCJ,EAAKH,KAAKQ,SACTX,EAAQ,2BAAIM,GAAL,IAAUJ,GAAGU,iBACpBL,EAAQ,2BAAID,GAAL,IAAUH,KAAK,QAKlB,UACI,uBACAU,KAAK,OACLC,KAAK,OACLC,MAAOT,EAAKH,KACZa,SArBZ,SAA0BP,GACtBF,EAAQ,2BAAID,GAAL,IAAUH,KAAKM,EAAEQ,OAAOF,YAqBvB,uBACCF,KAAK,OACNC,KAAK,iBACHE,SAtBd,SAA8BP,GAC1BF,EAAQ,2BAAID,GAAL,IAAUF,KAAKK,EAAEQ,OAAOF,YAuBvB,wBAAQD,KAAK,SAAb,wB,iDCNGI,MA3Bf,YAAqD,IAArCZ,EAAoC,EAApCA,KAAMa,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WASpC,OACE,eAACC,EAAA,EAAD,CAAUC,MAAO,CAAEC,QAAS,QAA5B,UACE,cAACC,EAAA,EAAD,CAAUC,QAASnB,EAAKD,UAAWqB,QAVvC,WACEP,EAAeb,EAAKJ,OAUlB,cAACyB,EAAA,EAAD,CACEC,QAAQ,QACRN,MAAO,CACLO,eAAgBvB,EAAKD,UAAY,eAAiB,MAHtD,SAMGC,EAAKH,KAAK,KAAKG,EAAKF,OAEvB,cAAC0B,EAAA,EAAD,CAAYJ,QAfhB,WACEN,EAAWd,EAAKJ,KAcd,SACE,cAAC,IAAD,UCXO6B,MAZf,YAA2D,IAAnCC,EAAkC,EAAlCA,MAAMZ,EAA4B,EAA5BA,WAAYD,EAAgB,EAAhBA,eAEtC,OACJ,6BACKa,EAAMC,KAAI,SAAA3B,GAAI,OACX,cAAC,EAAD,CAAoBA,KAAMA,EAAMc,WAAYA,EAC5CD,eAAgBA,GADLb,EAAKJ,UCAlBgC,EAAoB,YAuDXC,MArDf,WACE,MAAuBlC,mBAAS,IAAhC,mBAAO+B,EAAP,KAAaI,EAAb,KAoCA,OAlCAC,qBAAU,WAER,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQR,IACjDI,GACFF,EAASE,KAEV,IAEHD,qBAAU,WAERI,aAAaE,QAAQT,EAAmBK,KAAKK,UAAUZ,MACtD,CAACA,IAwBF,qBAAKa,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,4CACA,cAAC,EAAD,CAAUhD,QA1BhB,SAAiBM,GACf8B,EAAS,CAAC9B,GAAF,mBAAU0B,QA0Bd,cAAC,EAAD,CACAA,MAAOA,EACPZ,WAZN,SAAoBlB,GAClBkC,EAASJ,EAAMiB,QAAO,SAAA3C,GAAI,OAAIA,EAAKJ,KAAOA,OAYtCiB,eA3BN,SAAwBjB,GACtBkC,EACEJ,EAAMC,KAAI,SAAA3B,GACR,OAAIA,EAAKJ,KAAOA,EACP,2BACFI,GADL,IAEED,WAAYC,EAAKD,YAGdC,eCzBA4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.07dc543b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {useState} from \"react\";\r\nimport {v1 as uuid} from \"uuid\"; \r\n\r\nfunction Todoform({addTodo}){\r\n    const[todo,settodo] = useState({\r\n        id:\"\",\r\n        task:\"\",\r\n        date:\"\",\r\n        completed:false\r\n    });\r\nfunction handletodoChange(e){\r\n    settodo({...todo,task:e.target.value});\r\n}\r\nfunction handletodoChangedate(e){\r\n    settodo({...todo,date:e.target.value});\r\n}\r\n\r\nfunction handleSubmit(e){\r\ne.preventDefault();\r\nif(todo.task.trim()){\r\n    addTodo({...todo,id:uuid()});\r\n    settodo({...todo,task:\"\"});\r\n}\r\n}\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            name=\"task\"\r\n            type=\"text\"\r\n            value={todo.task}\r\n            onChange={handletodoChange}/>\r\n            <input\r\n             name=\"date\"\r\n            type=\"datetime-local\"\r\n              onChange={handletodoChangedate}\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Todoform;","import { Checkbox, IconButton, ListItem, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport React from \"react\";\r\n\r\nfunction Todo({ todo, toggleComplete, removeTodo }) {\r\n  function handleCheckboxClick() {\r\n    toggleComplete(todo.id);\r\n  }\r\n\r\n  function handleRemoveClick() {\r\n    removeTodo(todo.id);\r\n  }\r\n\r\n  return (\r\n    <ListItem style={{ display: \"flex\" }}>\r\n      <Checkbox checked={todo.completed} onClick={handleCheckboxClick} />\r\n      <Typography\r\n        variant=\"body1\"\r\n        style={{\r\n          textDecoration: todo.completed ? \"line-through\" : null\r\n        }}\r\n      >\r\n        {todo.task+\"on\"+todo.date}\r\n      </Typography>\r\n      <IconButton onClick={handleRemoveClick}>\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","\r\nimport Todo from \"./todoitem\";\r\nfunction TodoItemsList({todos,removeTodo, toggleComplete}){\r\n\r\n    return(\r\n<ul>\r\n    {todos.map(todo=>(\r\n        <Todo key={todo.id} todo={todo} removeTodo={removeTodo}\r\n        toggleComplete={toggleComplete}/>\r\n    ))}\r\n</ul>\r\n    );\r\n}\r\n\r\nexport default TodoItemsList;","import logo from './logo.svg';\nimport './App.css';\nimport React,{useState,useEffect} from \"react\";\nimport Todoform from './components/todoform';\nimport TodoItemsList from './components/todoitemslist';\n\n\nconst LOCAL_STORAGE_KEY = \"todo-list\";\n\nfunction App() {\n  const [todos,setTodos]=useState([]);\n  \n  useEffect(() => {\n    // fires when app component mounts to the DOM\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    // fires when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo){\n    setTodos([todo,...todos]);\n  }\n  function toggleComplete(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>TO-DO LIST </p>\n        <Todoform addTodo={addTodo}></Todoform>\n        <TodoItemsList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleComplete={toggleComplete}\n      />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}